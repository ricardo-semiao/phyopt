% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flow.R
\name{flow_stopper}
\alias{flow_stopper}
\title{Flow Stopper Constructor}
\usage{
flow_stopper(
  formulas = list(get_metric$iter(100), get_metric$f_prop(0.01)),
  check_expr = ~any(.ms, na.rm = TRUE),
  iter_upper = 10000
)
}
\arguments{
\item{formulas}{A list of formulas specifying the metrics \mjseqn{m} to be
calculated on the LHS (see details), and the stopping criterion depending on
the metric value \code{.m}, on the RHS.}

\item{check_expr}{A RHS-only formula with a logic operation, depending on the
vector of booleans \code{.ms}.}

\item{iter_upper}{A technical argument used to initialize containers for
\mjseqn{R} and \mjseqn{M}. A stopping criterion based on \mjseqn{t} should
be defined in the \code{formulas} argument.}
}
\value{
A \code{"flow_stopper"}-class object to be passed to \code{optimize_phy()}.
}
\description{
\loadmathjax

This function creates a flow stopper object that calculate metrics, at each
iteration, based on the current results of the algorithm, and checks if the
algorithm should stop based on those metrics.

Given the objects in \mjseqn{R} (list of results for every iteration), the
user can define a set of metrics \mjseqn{M_t}, to be calculated at every
iteration \mjseqn{t}. Based on each metric\mjseqn{m}, a stopping criterion
can be defined via any expression on \mjseqn{m} that returns a boolean.

Finally, the list of booleans for a given iteration \mjseqn{t} can be
combined with any logic expression to determine if the algorithm should
stop.
}
\details{
The LHS of the are evaluated in the context of the algorithm, i.e., it can
depend on the variables \code{t} (current iteration), \code{time} (current time in
seconds), and the list of each element in \mjseqn{R} (with length \code{t}).
For example, \code{f[[t - 1]]} will evaluate to the vector of objective function
values of all the samples in the previous iteration.

Note that you can set unfeasible stopping criteria, \code{FALSE} to only get
the value of the metric at the end of the algorithm.
}
